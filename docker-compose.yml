version: "3.8"

services:
  localstack:
    image: localstack/localstack
    init: true
    # ports:
    #   - "127.0.0.1:4566:4566"  # only used during development
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LS_LOG=${LS_LOG-}
    volumes:
      # - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      ls:
        ipv4_address: 10.0.2.20
    # shorten healthcheck duration for better dev experience
    healthcheck:
      test: ["CMD", "./bin/localstack", "status", "services", "--format=json"]
      interval: 1s
      timeout: 1s
      retries: 10

  deploy:
    image: node:18-slim
    depends_on:
      localstack:
        condition: service_healthy
    entrypoint: ""
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_ACCOUNT_ID=000000000000
      - AWS_ENDPOINT_URL=http://localhost.localstack.cloud:4566
    working_dir: /cdk
    command: >
      bash -xc "
      npm install &&
      npx cdklocal bootstrap &&
      npx cdklocal deploy --require-approval never
      "
    volumes:
      - $PWD/cdk:/cdk
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - ls
    dns:
      - 10.0.2.20

  application:
    depends_on:
      deploy:
        condition: service_completed_successfully
    build: .
    init: true
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
    networks:
      - ls
    dns:
      - 10.0.2.20

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24
